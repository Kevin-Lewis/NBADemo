<MudDialog>
    <TitleContent>
        Per 100 Stat Weights
    </TitleContent>
    <DialogContent>
        <div class="container">
            <div class="row">
                <div class="col-12 col-md-6 col-lg-4">
                    <MudSlider @bind-Value="@PTSPer100" Variant="Variant.Filled">Points: @PTSPer100</MudSlider>
                    <br /><br />
                    <MudSlider @bind-Value="@ASTPer100" Variant="Variant.Filled">Assists: @ASTPer100</MudSlider>
                    <br /><br />
                    <MudSlider @bind-Value="@TOVPer100" Variant="Variant.Filled">Turnovers: @TOVPer100</MudSlider>
                    <br /><br />
                    <MudSlider @bind-Value="@PFPer100" Variant="Variant.Filled">Fouls: @PFPer100</MudSlider>
                </div>
                <div class="col-12 col-md-6 col-lg-4">
                    <MudSlider @bind-Value="@ORBPer100" Variant="Variant.Filled">Offensive Rebounds: @ORBPer100</MudSlider>
                    <br><br />
                    <MudSlider @bind-Value="@BLKPer100" Variant="Variant.Filled">Blocks: @BLKPer100</MudSlider>
                    <br /><br />
                    <MudSlider @bind-Value="@FTPer100" Variant="Variant.Filled">Free Throws Made: @FTPer100</MudSlider>
                </div>
                <div class="col-12 col-md-6 col-lg-4">
                    <MudSlider @bind-Value="@DRBPer100" Variant="Variant.Filled">Defensive Rebounds: @DRBPer100</MudSlider>
                    <br /><br />
                    <MudSlider @bind-Value="@STLPer100" Variant="Variant.Filled">Steals: @STLPer100</MudSlider>
                    <br /><br />
                    <MudSlider @bind-Value="@FTAPer100" Variant="Variant.Filled">Free Throws Attempted: @FTAPer100</MudSlider>
                </div>
            </div>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public int PTSPer100 { get; set; }
    [Parameter]
    public int FTAPer100 { get; set; }
    [Parameter]
    public int FTPer100 { get; set; }
    [Parameter]
    public int ORBPer100 { get; set; }
    [Parameter]
    public int DRBPer100 { get; set; }
    [Parameter]
    public int ASTPer100 { get; set; }
    [Parameter]
    public int STLPer100 { get; set; }
    [Parameter]
    public int BLKPer100 { get; set; }
    [Parameter]
    public int TOVPer100 { get; set; }
    [Parameter]
    public int PFPer100 { get; set; }
    [Parameter]
    public EventCallback<(int, int, int, int, int, int, int, int, int, int)> OnValuesUpdated { get; set; }
    [CascadingParameter]
    private MudDialogInstance Per100DialogInstance { get; set; }

    private void Submit()
    {
        OnValuesUpdated.InvokeAsync((PTSPer100, ASTPer100, ORBPer100, DRBPer100, TOVPer100, FTAPer100, FTPer100, BLKPer100, STLPer100, PFPer100));
        Per100DialogInstance.Close(DialogResult.Ok(true));
    }
}